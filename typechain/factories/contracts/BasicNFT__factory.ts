/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { BasicNFT, BasicNFTInterface } from "../../contracts/BasicNFT";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "TOKEN_URI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokenCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintNft",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600581526020017f446f6769650000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f444f470000000000000000000000000000000000000000000000000000000000815250816000908051906020019062000096929190620000c0565b508060019080519060200190620000af929190620000c0565b5050506000600681905550620001d5565b828054620000ce9062000170565b90600052602060002090601f016020900481019282620000f257600085556200013e565b82601f106200010d57805160ff19168380011785556200013e565b828001600101855582156200013e579182015b828111156200013d57825182559160200191906001019062000120565b5b5090506200014d919062000151565b5090565b5b808211156200016c57600081600090555060010162000152565b5090565b600060028204905060018216806200018957607f821691505b60208210811415620001a0576200019f620001a6565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6122d280620001e56000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063b88d4fde11610066578063b88d4fde146102ad578063c2229fea146102c9578063c87b56dd146102e7578063e985e9c51461031757610100565b806370a082311461022557806378ce90351461025557806395d89b4114610273578063a22cb4651461029157610100565b806323b872dd116100d357806323b872dd1461019f57806342842e0e146101bb5780636352211e146101d75780636e02007d1461020757610100565b806301ffc9a71461010557806306fdde0314610135578063081812fc14610153578063095ea7b314610183575b600080fd5b61011f600480360381019061011a9190611773565b610347565b60405161012c9190611a81565b60405180910390f35b61013d610429565b60405161014a9190611a9c565b60405180910390f35b61016d600480360381019061016891906117cd565b6104bb565b60405161017a9190611a1a565b60405180910390f35b61019d60048036038101906101989190611733565b610501565b005b6101b960048036038101906101b4919061161d565b610619565b005b6101d560048036038101906101d0919061161d565b610679565b005b6101f160048036038101906101ec91906117cd565b610699565b6040516101fe9190611a1a565b60405180910390f35b61020f61074b565b60405161021c9190611c1e565b60405180910390f35b61023f600480360381019061023a91906115b0565b610755565b60405161024c9190611c1e565b60405180910390f35b61025d61080d565b60405161026a9190611a9c565b60405180910390f35b61027b610829565b6040516102889190611a9c565b60405180910390f35b6102ab60048036038101906102a691906116f3565b6108bb565b005b6102c760048036038101906102c29190611670565b6108d1565b005b6102d1610933565b6040516102de9190611c1e565b60405180910390f35b61030160048036038101906102fc91906117cd565b610963565b60405161030e9190611a9c565b60405180910390f35b610331600480360381019061032c91906115dd565b610985565b60405161033e9190611a81565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061041257507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610422575061042182610a19565b5b9050919050565b60606000805461043890611e07565b80601f016020809104026020016040519081016040528092919081815260200182805461046490611e07565b80156104b15780601f10610486576101008083540402835291602001916104b1565b820191906000526020600020905b81548152906001019060200180831161049457829003601f168201915b5050505050905090565b60006104c682610a83565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061050c82610699565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561057d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057490611bde565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1661059c610ace565b73ffffffffffffffffffffffffffffffffffffffff1614806105cb57506105ca816105c5610ace565b610985565b5b61060a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060190611b7e565b60405180910390fd5b6106148383610ad6565b505050565b61062a610624610ace565b82610b8f565b610669576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066090611bfe565b60405180910390fd5b610674838383610c24565b505050565b610694838383604051806020016040528060008152506108d1565b505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610742576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073990611bbe565b60405180910390fd5b80915050919050565b6000600654905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156107c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bd90611b5e565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6040518060800160405280605781526020016122466057913981565b60606001805461083890611e07565b80601f016020809104026020016040519081016040528092919081815260200182805461086490611e07565b80156108b15780601f10610886576101008083540402835291602001916108b1565b820191906000526020600020905b81548152906001019060200180831161089457829003601f168201915b5050505050905090565b6108cd6108c6610ace565b8383610e8b565b5050565b6108e26108dc610ace565b83610b8f565b610921576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091890611bfe565b60405180910390fd5b61092d84848484610ff8565b50505050565b600061094133600654611054565b6001600660008282546109549190611cc7565b92505081905550600654905090565b6060604051806080016040528060578152602001612246605791399050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610a8c81611072565b610acb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac290611bbe565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610b4983610699565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610b9b83610699565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610bdd5750610bdc8185610985565b5b80610c1b57508373ffffffffffffffffffffffffffffffffffffffff16610c03846104bb565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610c4482610699565b73ffffffffffffffffffffffffffffffffffffffff1614610c9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9190611ade565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0190611b1e565b60405180910390fd5b610d158383836110de565b610d20600082610ad6565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d709190611d1d565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610dc79190611cc7565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610e868383836110e3565b505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610efa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef190611b3e565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610feb9190611a81565b60405180910390a3505050565b611003848484610c24565b61100f848484846110e8565b61104e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104590611abe565b60405180910390fd5b50505050565b61106e82826040518060200160405280600081525061127f565b5050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b505050565b505050565b60006111098473ffffffffffffffffffffffffffffffffffffffff166112da565b15611272578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611132610ace565b8786866040518563ffffffff1660e01b81526004016111549493929190611a35565b602060405180830381600087803b15801561116e57600080fd5b505af192505050801561119f57506040513d601f19601f8201168201806040525081019061119c91906117a0565b60015b611222573d80600081146111cf576040519150601f19603f3d011682016040523d82523d6000602084013e6111d4565b606091505b5060008151141561121a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161121190611abe565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611277565b600190505b949350505050565b61128983836112fd565b61129660008484846110e8565b6112d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112cc90611abe565b60405180910390fd5b505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561136d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161136490611b9e565b60405180910390fd5b61137681611072565b156113b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ad90611afe565b60405180910390fd5b6113c2600083836110de565b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546114129190611cc7565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46114d3600083836110e3565b5050565b60006114ea6114e584611c5e565b611c39565b90508281526020810184848401111561150657611505611efc565b5b611511848285611dc5565b509392505050565b600081359050611528816121e9565b92915050565b60008135905061153d81612200565b92915050565b60008135905061155281612217565b92915050565b60008151905061156781612217565b92915050565b600082601f83011261158257611581611ef7565b5b81356115928482602086016114d7565b91505092915050565b6000813590506115aa8161222e565b92915050565b6000602082840312156115c6576115c5611f06565b5b60006115d484828501611519565b91505092915050565b600080604083850312156115f4576115f3611f06565b5b600061160285828601611519565b925050602061161385828601611519565b9150509250929050565b60008060006060848603121561163657611635611f06565b5b600061164486828701611519565b935050602061165586828701611519565b92505060406116668682870161159b565b9150509250925092565b6000806000806080858703121561168a57611689611f06565b5b600061169887828801611519565b94505060206116a987828801611519565b93505060406116ba8782880161159b565b925050606085013567ffffffffffffffff8111156116db576116da611f01565b5b6116e78782880161156d565b91505092959194509250565b6000806040838503121561170a57611709611f06565b5b600061171885828601611519565b92505060206117298582860161152e565b9150509250929050565b6000806040838503121561174a57611749611f06565b5b600061175885828601611519565b92505060206117698582860161159b565b9150509250929050565b60006020828403121561178957611788611f06565b5b600061179784828501611543565b91505092915050565b6000602082840312156117b6576117b5611f06565b5b60006117c484828501611558565b91505092915050565b6000602082840312156117e3576117e2611f06565b5b60006117f18482850161159b565b91505092915050565b61180381611d51565b82525050565b61181281611d63565b82525050565b600061182382611c8f565b61182d8185611ca5565b935061183d818560208601611dd4565b61184681611f0b565b840191505092915050565b600061185c82611c9a565b6118668185611cb6565b9350611876818560208601611dd4565b61187f81611f0b565b840191505092915050565b6000611897603283611cb6565b91506118a282611f1c565b604082019050919050565b60006118ba602583611cb6565b91506118c582611f6b565b604082019050919050565b60006118dd601c83611cb6565b91506118e882611fba565b602082019050919050565b6000611900602483611cb6565b915061190b82611fe3565b604082019050919050565b6000611923601983611cb6565b915061192e82612032565b602082019050919050565b6000611946602983611cb6565b91506119518261205b565b604082019050919050565b6000611969603e83611cb6565b9150611974826120aa565b604082019050919050565b600061198c602083611cb6565b9150611997826120f9565b602082019050919050565b60006119af601883611cb6565b91506119ba82612122565b602082019050919050565b60006119d2602183611cb6565b91506119dd8261214b565b604082019050919050565b60006119f5602e83611cb6565b9150611a008261219a565b604082019050919050565b611a1481611dbb565b82525050565b6000602082019050611a2f60008301846117fa565b92915050565b6000608082019050611a4a60008301876117fa565b611a5760208301866117fa565b611a646040830185611a0b565b8181036060830152611a768184611818565b905095945050505050565b6000602082019050611a966000830184611809565b92915050565b60006020820190508181036000830152611ab68184611851565b905092915050565b60006020820190508181036000830152611ad78161188a565b9050919050565b60006020820190508181036000830152611af7816118ad565b9050919050565b60006020820190508181036000830152611b17816118d0565b9050919050565b60006020820190508181036000830152611b37816118f3565b9050919050565b60006020820190508181036000830152611b5781611916565b9050919050565b60006020820190508181036000830152611b7781611939565b9050919050565b60006020820190508181036000830152611b978161195c565b9050919050565b60006020820190508181036000830152611bb78161197f565b9050919050565b60006020820190508181036000830152611bd7816119a2565b9050919050565b60006020820190508181036000830152611bf7816119c5565b9050919050565b60006020820190508181036000830152611c17816119e8565b9050919050565b6000602082019050611c336000830184611a0b565b92915050565b6000611c43611c54565b9050611c4f8282611e39565b919050565b6000604051905090565b600067ffffffffffffffff821115611c7957611c78611ec8565b5b611c8282611f0b565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611cd282611dbb565b9150611cdd83611dbb565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611d1257611d11611e6a565b5b828201905092915050565b6000611d2882611dbb565b9150611d3383611dbb565b925082821015611d4657611d45611e6a565b5b828203905092915050565b6000611d5c82611d9b565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611df2578082015181840152602081019050611dd7565b83811115611e01576000848401525b50505050565b60006002820490506001821680611e1f57607f821691505b60208210811415611e3357611e32611e99565b5b50919050565b611e4282611f0b565b810181811067ffffffffffffffff82111715611e6157611e60611ec8565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000602082015250565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206e6f7220617070726f766564000000000000000000000000000000000000602082015250565b6121f281611d51565b81146121fd57600080fd5b50565b61220981611d63565b811461221457600080fd5b50565b61222081611d6f565b811461222b57600080fd5b50565b61223781611dbb565b811461224257600080fd5b5056fe697066733a2f2f62616679626569673337696f6972373673376d67356f6f6265746e636f6a636d3363336878617379643472766964346a71687934676b61686567342f3f66696c656e616d653d302d5055472e6a736f6ea264697066735822122072641bc704141eed0ac5ebc376dc5ae5d1d6f3a38c6ef285cc564cd2e2f6d42564736f6c63430008070033";

type BasicNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BasicNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BasicNFT__factory extends ContractFactory {
  constructor(...args: BasicNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BasicNFT> {
    return super.deploy(overrides || {}) as Promise<BasicNFT>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BasicNFT {
    return super.attach(address) as BasicNFT;
  }
  override connect(signer: Signer): BasicNFT__factory {
    return super.connect(signer) as BasicNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BasicNFTInterface {
    return new utils.Interface(_abi) as BasicNFTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BasicNFT {
    return new Contract(address, _abi, signerOrProvider) as BasicNFT;
  }
}
